name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # application.properties 파일 생성
    - run: | 
        touch ./src/main/resources/application.properties
        echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
        cat ./src/main/resources/application.properties

    # property/aws.properties 파일 생성
    - run: |
        mkdir -p ./src/main/resources/property
        touch ./src/main/resources/property/aws.properties
        echo "${{ secrets.AWS_PROPERTIES }}" > ./src/main/resources/property/aws.properties
        cat ./src/main/resources/property/aws.properties

    # property/database.properties 파일 생성
    - run: |
        touch ./src/main/resources/property/database.properties
        echo "${{ secrets.DATABASE_PROPERTIES }}" > ./src/main/resources/property/database.properties
        cat ./src/main/resources/property/database.properties

    # property/jwt.properties 파일 생성
    - run: |
        touch ./src/main/resources/property/jwt.properties
        echo "${{ secrets.JWT_PROPERTIES }}" > ./src/main/resources/property/jwt.properties
        cat ./src/main/resources/property/jwt.properties

    # property/kafka.properties 파일 생성
    - run: |
        touch ./src/main/resources/property/kafka.properties
        echo "${{ secrets.KAFKA_PROPERTIES }}" > ./src/main/resources/property/kafka.properties
        cat ./src/main/resources/property/kafka.properties

    # property/oauth2.properties 파일 생성
    - run: |
        touch ./src/main/resources/property/oauth2.properties
        echo "${{ secrets.OAUTH2_PROPERTIES }}" > ./src/main/resources/property/oauth2.properties
        cat ./src/main/resources/property/oauth2.properties
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant chmod to make gradlew executable
      run: chmod +x gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build
        
    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKER_PWD }}
        docker build -t ${{secrets.DOCKERHUB_ID}}/${{secrets.IMAGENAME}}:latest .
        docker push ${{secrets.DOCKERHUB_ID}}/${{secrets.IMAGENAME}}:latest

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          docker pull ${{secrets.DOCKERHUB_ID}}/${{secrets.IMAGENAME}}:latest
          docker stop server
          docker run -d --rm --name server -p 8080:8080 ${{secrets.DOCKERHUB_ID}}/${{secrets.IMAGENAME}}:latest
